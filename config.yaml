---
- #Setup
    id: 0
    name: "Setup"
#    skipstage: True
    dbUser: "root"
    dbPass: "password"
    webRoot: "/var/www/html"
    webUser: "chainer"
    webPass: "h@ckTheGibs0n!"
    commands:
    - "echo 'Installing applications'"
#    - "apt install your custom applications here -y;"
    - "echo 'Setting up DB'"
    - "mysql -u root '-ppassword' -e 'CREATE DATABASE chainer;' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `seed` (`id` INT NOT NULL AUTO_INCREMENT,`domain` TEXT NOT NULL,PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `subdomain` (`id` INT NOT NULL AUTO_INCREMENT,`domain` TEXT NOT NULL, `ipaddress` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `ipaddressopenport` (`id` INT NOT NULL AUTO_INCREMENT,`ipaddress` TEXT NOT NULL, `port` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `nmapscriptoutput` (`id` INT NOT NULL AUTO_INCREMENT,`ipaddress` TEXT NOT NULL, `port` TEXT, `output` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `niktoscriptoutput` (`id` INT NOT NULL AUTO_INCREMENT,`domain` TEXT NOT NULL, `output` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `whatweboutput` (`id` INT NOT NULL AUTO_INCREMENT,`domain` TEXT NOT NULL, `output` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `interestingoutput` (`id` INT NOT NULL AUTO_INCREMENT,`endpoint` TEXT NOT NULL, `keyword` TEXT, `output` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `foundword` (`id` INT NOT NULL AUTO_INCREMENT,`word` TEXT NOT NULL, PRIMARY KEY (`id`));' 2>/dev/null"
    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `wordcloud` (`id` INT NOT NULL AUTO_INCREMENT,`word` TEXT NOT NULL, `count` INT NOT NULL, PRIMARY KEY (`id`));' 2>/dev/null"

#can't currently capture davtest output 
#    - "mysql -u root '-ppassword' 'chainer' -e 'CREATE TABLE `webdavoutput` (`id` INT NOT NULL AUTO_INCREMENT,`domain` TEXT NOT NULL, `output` TEXT, PRIMARY KEY (`id`));' 2>/dev/null"

- #Stage 1
    id: 1
    name: "Phase one scan"
#    skipstage: True
    run:
    - application:
      cmd: "sublist3r -d ${INPUT}$ -n -o .sublist3rtmp 2>/dev/null"
      input: "${db.seed.domain}$"
      output:
       sourcefile: ".sublist3rtmp"
       store:
        location: "${db.subdomain.domain}$"
      cleanup:
       cmd: "rm .sublist3rtmp"
    - application:
      cmd: "anubis -t ${INPUT}$ | awk '/----/{y=1;next}y' | grep -v Subdomain > .anubistmp 2>/dev/null"
      input: "${db.seed.domain}$"
      output:
       sourcefile: ".anubistmp"
       store:
        location: "${db.subdomain.domain}$"
      cleanup:
       cmd: "rm .anubistmp"
    - application:
      cmd: "${db}$"
      sql: "delete subs from subdomain as subs left join seed as seeds on subs.domain like concat('%', seeds.domain) where seeds.id is null;"
    - application:
      cmd: "nmap -sn ${INPUT}$ -oG .nmaptmp 2>/dev/null"
      input: "${db.subdomain.domain}$"
      output:
       sourcefile: ".nmaptmp"
       postoutputcmd: "cat .nmaptmp | grep Up | cut -d ' ' -f2"
       store:
        sql: "UPDATE subdomain SET ipaddress = ${RESULT}$ where domain = ${INPUT}$"
      cleanup:
       cmd: "rm .nmaptmp"
    - application:
      cmd: "${db}$"
      sql: "delete from subdomain where ipaddress is NULL;"

- #Stage 2
    id: 2
    name: "Phase 2 port scans"
#    skipstage: True
    run:
    - application:
      cmd: "nmap --open --top-ports=1000 -oG .nmaptmp ${INPUT}$"
      input: ${db.subdomain.ipaddress}$
      output:
       preoutputcmd: 'for port in $(cat .nmaptmp | grep open | grep -v "#" | grep -o -P "(?<=Ports: ).*" ); do echo $port | cut -d "/" -f1,5 | grep -v -P "Ignored|State:|filtered|\(|\)" | cut -d "/" -f1 >> .ports; done'
       sourcefile: ".ports"
       store:
        sql: "INSERT INTO ipaddressopenport (id,ipaddress,port) values(null,${INPUT}$,${RESULT}$);"
      cleanup:
       cmd: "rm .ports"

- #Stage 3
    id: 3
    name: "Phase 3 script scans"
#    skipstage: True
    run:
    - application:
      cmd: "whatweb ${INPUT}$ > .whatweboutput"
      input: "${db.ipaddressopenport.ipaddress}$"
      inputconstraint: "${db.ipaddressopenport.port}$${443}$"
      output:
       sourcefile: ".whatweboutput"
       store:
        sql: "INSERT INTO whatweboutput (id,domain,output) values(null,${INPUT}$,${RESULT}$);"
      cleanup:
       cmd: "rm .whatweboutput"
    - application:
      cmd: "nmap -sC ${INPUT}$ -p ${INPUT}$ -oN .nmapscriptscan;"
      input: "${db.ipaddressopenport.ipaddress&db.ipaddressopenport.port}$"
      inputconstraint: "${db.ipaddressopenport.port}$${443}$"
      output:
       sourcefile: ".nmapscriptscan"
       store:
        sql: "INSERT INTO nmapscriptoutput (id,ipaddress,port,output) values(null,${INPUT}$,${INPUT}$,${RESULT}$);"
       cleanup:
        cmd: "rm .nmapscriptscan"

# no matter what I do i can't capture the output of this tool.... wtf?
#    - application:
#      cmd: "davtest -quiet -url ${INPUT}$ | grep -v 'FAIL' > .davoutput"
#      input: "${db.subdomain.domain}$
#      output:
#       sourcefile: ".davoutput"
#       store:
#        sql: "INSERT INTO webdavoutput (id,domain,output) values(null,${INPUT}$,${RESULT}$);"
#       cleanup:
#        cmd: "rm .davoutput"

    - application:
      cmd: "nikto -nointeractive -ssl -maxtime 1200 -Tuning x 4 6 -h https://${INPUT}$ > .niktooutput"
      input: "${db.subdomain.domain}$"
      output:
       nolistoutput: True
       sourcefile: ".niktooutput"
       store:
        sql: "INSERT INTO niktoscriptoutput (id, domain, output) values(null, ${INPUT}$, ${RESULT}$);"

- #Stage 4
    id: 4
    name: "Heuristics"
    run:
    - application:
      interestingoutput:       
       tables:
       - table:
         name: "niktoscriptoutput"
         identcolumn: "domain"
         outputcolumn: "output"
       - table: 
         name: "whatweboutput"
         identcolumn: "domain"
         outputcolumn: "output"         
       - table:
         name: "nmapscriptoutput"
         identcolumn: "ipaddress"
         outputcolumn: "output"
       keywords:
       - "wordpress"
       - "wadl"
       - "phpmyadmin"
       - "default"
       - "xls"
       - "csv"
       - "directory"
       - "interesting"
       - "txt"
       - "wsdl"
       - "config"
       - "credentials"
       - "username"
       - "password"
       - "login"
       - "backup"
       - "bkup"
       - ".db"
       - ".sql"
       - ".bak"
       - ".bac"
       - ".old"
       - "orig"
       - "secret"

- #Stage 5
    id: 5
    name: "Reporting"
    run:
    - application:
      wordmap:
       tables:
       - table:
         name: "niktoscriptoutput"
         outputcolumn: "output"
       - table: 
         name: "whatweboutput"
         outputcolumn: "output"         
       - table:
         name: "nmapscriptoutput"
         outputcolumn: "output"
       filterwords:
       - "nmap"
       - "done"
       - "mon"
       - "tue"
       - "wed"
       - "thu"
       - "fri"
       - "sat"
       - "sun"
       - "seconds"
       - "jan"
       - "feb"
       - "mar"
       - "apr"
       - "may"
       - "jun"
       - "jul"
       - "aug"
       - "sep"
       - "oct"
       - "nov"
       - "dec"
       - "as"
       - "-sc"
       - "-p"
       - "\\n"
       - "|"
       - "_"
       - "h2"
       - "scanner"
       - "The"
       - "plain"
       - "HTTP"
       - "request"
       - "was"
       - "sent"
       - "to"
       - "'|_http-title:"
       - "seconds\\n']"
       - "'host"
       - "is"
       - "'#"
       - "'\\n',"
       - "subject:"
       - "name:"
       - "latency).\\n"
       - "'nmap"
       - "for"
       - "as:"
       - "-oN"
       - "'PORT"
       - "site"
       - "doesn'"
       - "have"
       - "a"
       - "title.\\n\","
       - "'|"
       - "'nmap"
       - "q"
       - "from"
       - "time"
       - "dns"
       - "alternative"
       - "subject"
       - "state"
       - "service"
       - "initiated"
       - "scan"
       - "scanned"
       - "up"
       - "host"
       - "not"
       - "valid"
       - "before"
       - ":"
       - "potentially"
       - "risky"
       - "methods"
       - "|_http-title"
       - "did"
       - "not"
       - "follow"
       - "report"
       - ".nmapscriptscan"
       - ".niktoscriptscan"
       - "ip"
       - "address"
       - "script"
       - "service\\n',"
       - "'|_not"
       - "after:"
       - "at"
       - "'|_clock-skew:"
       - "results:\\n',"
       - "'\n',"
       - "time.\n',"
       - "'|_ssl-date:"
       - "before:"
       - "Page\\n',"
       - "up)"
       - "title.\\n\""
       - "time\\',"
       - "represent"
       - "does"
       - "seconds\\n']"
       - "SERVICE\\n',"
       - "latency).\\n',"
       - "\"|_http-title:"
       - "results:\\n',"
       - "'\\n',"
       - "time.\\n',"
       - "methods:"
       - "TRACE\\n',"
       - "http-methods:"
       - "\n',"
       - "'|_"
       - "randomness"
       - "of"
       - "doesn't"
       - "title"
       - "(text/html;"
       - "charset=UTF-8).\\n\","
       - "entries"
       - "--"
       - "'|_"
       - "defined.\\n',"
       - "'+"
       - "uses"
       - "SSL"
       - "and"
       - "Expect-CT"
       - "header" 
       - ":-present.\\n',"
       - "'+"
       - "X-Content-Type-Options"
       - "header"
       - "set."
       - "This"
       - "could"
       - "allow"
       - "user"
       - "agent"
       - "render"
       - "content"
       - "in"
       - "different"
       - "fashion"
       - "MIME"
       - "type\\n',"
       - "\"+"
       - "No"
       - "Hostname"
       - "match"
       - "certificate's"
       - "names:"
       - "requests:"
       - "error(s)"
       - "item(s)"
       - "reported"
       - "on"
       - "remote"
       - "host\n',"
       - "End"
       - "Time:"
       - "CGI"
       - "Directories"
       - "found"
       - "(use"
       - "'-C"
       - "all'"
       - "force"
       - "check"
       - "all"
       - "possible"
       - "dirs)\\n\","
       - "Server"
       - "using"
       - "wildcard"
       - "certificate:"
       - "might"
       - "be"
       - "interesting..."
       - "has"
       - "been"
       - "seen"
       - "web"
       - "logs"
       - "an"
       - "unknown"
       - "scanner.\\n',"
       - "allows"
       - "execution"
       - "commands\\n',"
       - "any"
       - "ip."
       - "tippically"
       - "only"
       - "port"
       - "Target"
       - "IP:"
       - "Port:"
       - "Hostname:"
       - "previous"
       - "are"
       - "vulnerable"
       - "should"
       - "accessible\\n',"
       - "present.\\n',"
       - "X-XSS-Protection"
       - "defined."
       - "can"
       - "hint"
       - "protect"
       - "against"
       - "some"
       - "forms"
       - "header:"
       - "x-powered-by"
       - "retrieved"
       - "server:"
       - "start"
       - "ciphers:"
       - "issuer:"
       - "seconds)\\n',"
       - "'---------------------------------------------------------------------------\\n',"
       - "tested"
       - "host(s)"
       - "v2.1.6"
       - "Nikto"
       - "['-"
       - "(GMT-4)"
       - "host"
       - ","
       - "Info:"
       - "with"
       - "found,"
       - "uncommon"
       - "contents:"
       - "multiple"
       - "terminated:"
       - "addresses"
       - "message:"
       - "none"
       - "test"
       - "none'"
       - "use"
       - "'found',"
       - "dropped."
       - "will"
       - "connection"
       - "log,"
       - "transparency"
       - "receiving"
       - "upon"
       - "enforced,"
       - "tested']"
       - "v2.1.6',"
       - "host',"
       - "(GMT-4)',"
       - "found:"
       - "none,"
       - "dropped.',"
